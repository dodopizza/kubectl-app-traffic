#!/bin/bash
set -eu

pretty_name() {
  local name=$(basename $0)
  name=${name/"kubectl-"/"kubectl "}
  name="${name/_/-}"

  echo "$name"
}

usage() {
  local name=$(pretty_name $0)
  echo "Usage:
  $name -n <namespace> <--enable|--disable> <service>
Examples:
  Disable traffic from service 'foo' located in namespace 'bar':
    $name -n bar --disable foo
  Enable traffic to service 'foo' (after it was disabled) located in namespace 'bar'
    $name -n bar --enable foo
Note:
  Namespace may be omitted. In this case, it will be used from current config"
}

service=""
namespace=""
operation=""

while [ $# -gt 0 ]; do
  key="$1"

  case $key in
  -n | --namespace)
    namespace=$2
    shift
    shift
    ;;
  --namespace=*)
    namespace=${key##*=}
    shift
    ;;
  --enable | -e)
    operation="enable"
    shift
    ;;
  --disable | -d)
    operation="disable"
    shift
    ;;
  *)
    service="$1"
    shift
    ;;
  esac
done

if [ -z "$service" ]; then
  echo "Error. Service not specified"
  usage && exit 1
fi

if [ -z "$operation" ]; then
  echo "Error. Operation not specified"
  usage && exit 1
fi

if [ -z "$namespace" ]; then
  echo "Warning. Namespace not specified, use from current config"
  namespace=$(kubectl config view --minify --output 'jsonpath={.contexts..namespace}')
fi

if [ "$operation" == "disable" ]; then
  echo "Disable traffic from $namespace/$service"
  patch="$(
    cat <<EOT
[
  {
    "op": "add",
    "path": "/spec/selector/offline",
    "value": "$(date +%s)"
  }
]
EOT
  )"
else
  echo "Enable traffic to $namespace/$service"
  patch="$(
    cat <<EOT
[
  {
    "op": "remove",
    "path": "/spec/selector/offline",
  }
]
EOT
  )"
fi

kubectl patch \
  service "$service" \
  --type='json' \
  --namespace "$namespace" \
  --patch="$patch"
